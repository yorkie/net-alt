0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/liuyazhong/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
12 verbose folder .
13 info prepublish net-alt@0.0.1
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/liuyazhong/.npm/1f1177db-tar.lock
16 silly lockFile 78b50527-1109-0-05154863023199141-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
17 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz /Users/liuyazhong/.npm/78b50527-1109-0-05154863023199141-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 78b50527-1109-0-05154863023199141-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
21 silly lockFile 78b50527-1109-0-05154863023199141-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
22 verbose tar unpack /var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
23 silly lockFile 723d5a1f-1109-0-05154863023199141-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package
24 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package /Users/liuyazhong/.npm/723d5a1f-1109-0-05154863023199141-package.lock
25 silly lockFile 78b50527-1109-0-05154863023199141-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
26 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz /Users/liuyazhong/.npm/78b50527-1109-0-05154863023199141-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry README.md
30 silly gunzTarPerm extractEntry benchmark.js
31 silly gunzTarPerm extractEntry example.js
32 silly gunzTarPerm extractEntry .gitignire
33 silly gunzTarPerm extractEntry binding.gyp
34 silly gunzTarPerm extractEntry lib/index.js
35 silly gunzTarPerm extractEntry src/net.cc
36 silly gunzTarPerm extractEntry src/net.h
37 silly lockFile 723d5a1f-1109-0-05154863023199141-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package
38 silly lockFile 723d5a1f-1109-0-05154863023199141-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package
39 silly lockFile 78b50527-1109-0-05154863023199141-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
40 silly lockFile 78b50527-1109-0-05154863023199141-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/tmp.tgz
41 verbose tar pack [ '/Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz',
41 verbose tar pack   '/var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package' ]
42 verbose tarball /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
43 verbose folder /var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package
44 silly lockFile 723d5a1f-1109-0-05154863023199141-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package
45 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package /Users/liuyazhong/.npm/723d5a1f-1109-0-05154863023199141-package.lock
46 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
47 verbose lock tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz /Users/liuyazhong/.npm/82b61cdb-ng-npm-net-alt-0-0-1-package-tgz.lock
48 silly lockFile 723d5a1f-1109-0-05154863023199141-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package
49 silly lockFile 723d5a1f-1109-0-05154863023199141-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38182-WDaxKubO/1390139491109-0.05154863023199141/package
50 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
51 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
52 silly lockFile 631fd88c-azhong-npm-net-alt-0-0-1-package /Users/liuyazhong/.npm/net-alt/0.0.1/package
53 verbose lock /Users/liuyazhong/.npm/net-alt/0.0.1/package /Users/liuyazhong/.npm/631fd88c-azhong-npm-net-alt-0-0-1-package.lock
54 silly lockFile 631fd88c-azhong-npm-net-alt-0-0-1-package /Users/liuyazhong/.npm/net-alt/0.0.1/package
55 silly lockFile 631fd88c-azhong-npm-net-alt-0-0-1-package /Users/liuyazhong/.npm/net-alt/0.0.1/package
56 verbose tar unpack /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
57 silly lockFile 3d02b669-azhong-npm-net-alt-0-0-1-package tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package
58 verbose lock tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package /Users/liuyazhong/.npm/3d02b669-azhong-npm-net-alt-0-0-1-package.lock
59 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
60 verbose lock tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz /Users/liuyazhong/.npm/82b61cdb-ng-npm-net-alt-0-0-1-package-tgz.lock
61 silly gunzTarPerm modes [ '755', '644' ]
62 silly gunzTarPerm extractEntry package.json
63 silly gunzTarPerm extractEntry README.md
64 silly gunzTarPerm extractEntry benchmark.js
65 silly gunzTarPerm extractEntry example.js
66 silly gunzTarPerm extractEntry .gitignire
67 silly gunzTarPerm extractEntry binding.gyp
68 silly gunzTarPerm extractEntry lib/index.js
69 silly gunzTarPerm extractEntry src/net.cc
70 silly gunzTarPerm extractEntry src/net.h
71 silly lockFile 3d02b669-azhong-npm-net-alt-0-0-1-package tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package
72 silly lockFile 3d02b669-azhong-npm-net-alt-0-0-1-package tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package
73 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
74 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
75 verbose chmod /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz 644
76 verbose chown /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz [ 501, 20 ]
77 silly lockFile 3a52ce78- .
78 silly lockFile 3a52ce78- .
79 silly publish { name: 'net-alt',
79 silly publish   version: '0.0.1',
79 silly publish   author: { name: 'Yorkie Neil', email: 'yorkiefixer@gmail.com' },
79 silly publish   description: 'alternative module to net, more lighter',
79 silly publish   keywords: [ 'tcp', 'net', 'alternative module' ],
79 silly publish   repository: { type: 'git', url: 'git://github.com/yorkie/net-alt.git' },
79 silly publish   homepage: 'https://github.com/yorkie/net-alt',
79 silly publish   main: 'lib/index.js',
79 silly publish   scripts: { install: 'node-gyp configure build' },
79 silly publish   license: 'MIT',
79 silly publish   readme: '\n# SimpleNet\n\nAlternative module to net, It\'s under being developed.\n\n\n### Installation\n\n```bash\n$ npm install net-alt\n```\n\n\n### Usage\n\n```js\nvar socket = new netAlt.SimpleNet(143, \'163.177.65.209\');\nsocket.connect(function(err, data) {\n  this.write(\'client says hello!\\r\\n\');\n  this.end(); // close fd via this.\n});\n```\n\n\n### Current comparison with 200 connections\n\n* net(NodeJS): 8.8M\n\n* SimpleNet: 7.2M\n\n\n### LICENSE\n\nMIT',
79 silly publish   readmeFilename: 'README.md',
79 silly publish   bugs: { url: 'https://github.com/yorkie/net-alt/issues' },
79 silly publish   _id: 'net-alt@0.0.1',
79 silly publish   dist: { shasum: '714a33fa35080b1f30747cfa51182b8b0dddbb4d' },
79 silly publish   _from: '.' }
80 verbose url raw net-alt
81 verbose url resolving [ 'https://registry.npmjs.org/', './net-alt' ]
82 verbose url resolved https://registry.npmjs.org/net-alt
83 info trying registry request attempt 1 at 21:51:31
84 http PUT https://registry.npmjs.org/net-alt
85 http 500 https://registry.npmjs.org/net-alt
86 info retry will retry, error on last attempt: Error: TypeError {[{<<"stack">>,
86 info retry    <<"([object Object],null,[object Object],[object Object])@validate_doc_update:316\n(function (doc, oldDoc, user, dbCtx) {\nfunction assert(ok, message) {if (!ok) {throw {forbidden: message};}}\n\nif (!user || !user.name) {throw {unauthorized: \"Please log in before writing to the db\"};}try {require(\"monkeypatch\").patch(Object, Date, Array, String);} catch (er) {assert(false, \"failed monkeypatching\");}try {var semver = require(\"semver\");var valid = require(\"valid\");var deep = require(\"deep\");var deepEquals = deep.deepEquals;} catch (er) {assert(false, \"failed loading modules\");}try {if (oldDoc) {oldDoc.users = oldDoc.users || {};}doc.users = doc.users || {};} catch (er) {assert(false, \"failed checking users\");}try {if (isAdmin()) {return;}} catch (er) {assert(false, \"failed checking admin-ness\");}\nfunction diffObj(o, n, p) {p = p || \"\";var d = [];var seenKeys = [];for (var i in o) {seenKeys.push(i);if (n[i] === undefined) {d.push(\"Deleted: \" + p + i);} else if (typeof o[i] !== typeof n[i]) {d.push(\"Changed Type: \" + p + i);} else if (typeof o[i] === \"object\") {if (o[i]) {if (n[i]) {d = d.concat(diffObj(o[i], n[i], p + i + \".\"));} else {d.push(\"Nulled: \" + p + i);}} else {if (n[i]) {d.push(\"Un-nulled: \" + p + i);} else {}}} else if (o[i] !== n[i]) {d.push(\"Changed: \" + p + i + \" \" + JSON.stringify(o[i]) + \" -> \" + JSON.stringify(n[i]));}}for (var i in n) {if (-1 === seenKeys.indexOf(i)) {d.push(\"Added: \" + p + i);}}return d;}\n\ntry {assert(!doc.forbidden || doc._deleted, doc.forbidden);} catch (er) {assert(false, \"failed checking doc.forbidden or doc._deleted\");}try {if (oldDoc && !doc._deleted && deepEquals(doc, oldDoc, [[\"users\", user.name], [\"time\", \"modified\"]])) {return;}} catch (er) {assert(false, \"failed checking starred stuff\");}\nfunction validUser() {if (!oldDoc || !oldDoc.maintainers) {return true;}if (isAdmin()) {return true;}if (typeof oldDoc.maintainers !== \"object\") {return true;}for (var i = 0, l = oldDoc.maintainers.length; i < l; i++) {if (oldDoc.maintainers[i].name === user.name) {return true;}}return false;}\n\n\nfunction isAdmin() {if (dbCtx && dbCtx.admins) {if (dbCtx.admins.names && dbCtx.admins.roles && dbCtx.admins.names.indexOf(user.name) !== -1) {return true;}for (var i = 0; i < user.roles.length; i++) {if (dbCtx.admins.roles.indexOf(user.roles[i]) !== -1) {return true;}}}return user && user.roles.indexOf(\"_admin\") >= 0;}\n\ntry {var vu = validUser();} catch (er) {assert(false, \"problem checking user validity\");}if (!vu) {assert(vu, \"user: \" + user.name + \" not authorized to modify \" + oldDoc.name + \"\\n\" + diffObj(oldDoc, doc).join(\"\\n\"));}if (doc._deleted && doc.name === \"npm\") {throw {forbidden: \"you may not delete npm!\"};}if (doc._deleted) {return;}assert(valid.name(doc.name), \"name invalid: \" + doc.name);if (!oldDoc && doc.name !== doc.name.toLowerCase()) {assert(false, \"New packages must have all-lowercase names\");}assert(doc.name === doc._id, \"name must match _id\");assert(doc.name.length < 512, \"name is too long\");assert(!doc.mtime, \"doc.mtime is deprecated\");assert(!doc.ctime, \"doc.ctime is deprecated\");assert(typeof doc.time === \"object\", \"time must be object\");assert(typeof doc['dist-tags'] === \"object\", \"dist-tags must be object\");var versions = doc.versions;assert(typeof versions === \"object\", \"versions must be object\");var latest = doc['dist-tags'].latest;if (latest) {assert(versions[latest], \"dist-tags.latest must be valid version\");}var version = versions[latest];if (version) {if (!version.dist) {assert(false, \"no dist object in \" + latest + \" version\");}if (!version.dist.tarball) {assert(false, \"no tarball in \" + latest + \" version\");}if (!version.dist.shasum) {assert(false, \"no shasum in \" + latest + \" version\");}}for (var v in doc['dist-tags']) {var ver = doc['dist-tags'][v];assert(semver.valid(ver, true), v + \" version invalid version: \" + ver);assert(versions[ver], v + \" version missing: \" + ver);}var depCount = 0;var maxDeps = 1000;\nfunction ridiculousDeps() {if (++depCount > maxDeps) {assert(false, \"too many deps.  please be less ridiculous.\");}}\n\nfor (var ver in versions) {var version = versions[ver];assert(semver.valid(ver, true), \"invalid version: \" + ver);assert(typeof version === \"object\", \"version entries must be objects\");assert(version.version === ver, \"version must match: \" + ver);assert(version.name === doc._id, \"version \" + ver + \" has incorrect name: \" + version.name);depCount = 0;for (var dep in version.dependencies || {}) {ridiculousDeps();}for (var dep in version.devDependencies || {}) {ridiculousDeps();}for (var dep in version.optionalDependencies || {}) {ridiculousDeps();}if (oldDoc && oldDoc.versions && !oldDoc.versions[ver]) {assert(semver.valid(ver), \"Invalid SemVer 2.0 version: \" + ver);if (version.hasOwnProperty(\"scripts\")) {assert(version.scripts && typeof version.scripts === \"object\", \"'scripts' field must be an object\");for (var s in version.scripts) {assert(typeof version.scripts[s] === \"string\", \"Non-string script field: \" + s);}}}}assert(Array.isArray(doc.maintainers), \"maintainers should be a list of owners\");doc.maintainers.forEach(function (m) {assert(m.name && m.email, \"Maintainer should have name and email: \" + JSON.stringify(m));});var time = doc.time;var c = new Date(Date.parse(time.created)), m = new Date(Date.parse(time.modified));assert(c.toString() !== \"Invalid Date\", \"invalid created time: \" + JSON.stringify(time.created));assert(m.toString() !== \"Invalid Date\", \"invalid modified time: \" + JSON.stringify(time.modified));if (oldDoc && oldDoc.time && oldDoc.time.created && Date.parse(oldDoc.time.created)) {assert(Date.parse(oldDoc.time.created) === Date.parse(time.created), \"created time cannot be changed\");}if (oldDoc && oldDoc.users) {assert(deepEquals(doc.users, oldDoc.users, [[user.name]]), \"you may only alter your own 'star' setting\");}if (doc.url) {assert(false, \"Package redirection has been removed. Please update your publish scripts.\");}if (doc.description) {assert(typeof doc.description === \"string\", \"\\\"description\\\" field must be a string\");}var oldVersions = oldDoc ? oldDoc.versions || {} : {};var oldTime = oldDoc ? oldDoc.time || {} : {};var versions = Object.keys(doc.versions), modified = null, allowedChange = [[\"directories\"], [\"deprecated\"]];for (var i = 0, l = versions.length; i < l; i++) {var v = versions[i];if (!v) {continue;}assert(doc.time[v], \"must have time entry for \" + v);if (doc.versions[v] && oldDoc.versions[v]) {doc.versions[v].version = oldDoc.versions[v].version;}if (doc.versions[v] && oldDoc.versions[v] && !deepEquals(doc.versions[v], oldVersions[v], allowedChange)) {var t = Date.parse(doc.time[v]), n = Date.now();if (typeof doc.versions[v]._npmUser !== \"object\") {continue;}assert(typeof doc.versions[v]._npmUser === \"object\", \"_npmUser field must be object\\n(You probably need to upgrade your npm version)\");var _npmUser = doc.versions[v]._npmUser;assert(_npmUser.name === user.name, \"version=\" + v + \"\\n\" + \"user.name=\" + user.name + \"\\n\" + \"_npmUser.name=\" + _npmUser.name + \"\\n\" + \"_npmUser.name must === user.name\");var found = false;for (var j = 0, lm = doc.maintainers.length; j < lm; j++) {var m = doc.maintainers[j];if (m.name === doc.versions[v]._npmUser.name) {found = true;break;}}assert(found, \"_npmUser must be a current maintainer.\\n\" + \"maintainers=\" + JSON.stringify(doc.maintainers) + \"\\n\" + \"current user=\" + JSON.stringify(doc.versions[v]._npmUser));} else if (oldTime[v]) {assert(oldTime[v] === doc.time[v], v + \" time should not be modified 1\");}}for (var v in oldTime) {if (doc.versions[v] || !oldVersions[v]) {continue;}assert(doc.time[v] === oldTime[v], v + \" time should not be modified 2\");}},[object Object],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1270\n(\"_design/scratch\",[object Array],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1517\n()@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1562\n@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1573\n@:0\n">>}]}: net-alt
87 info trying registry request attempt 2 at 21:51:43
88 http PUT https://registry.npmjs.org/net-alt
89 http 500 https://registry.npmjs.org/net-alt
90 info retry will retry, error on last attempt: Error: TypeError {[{<<"stack">>,
90 info retry    <<"([object Object],null,[object Object],[object Object])@validate_doc_update:316\n(function (doc, oldDoc, user, dbCtx) {\nfunction assert(ok, message) {if (!ok) {throw {forbidden: message};}}\n\nif (!user || !user.name) {throw {unauthorized: \"Please log in before writing to the db\"};}try {require(\"monkeypatch\").patch(Object, Date, Array, String);} catch (er) {assert(false, \"failed monkeypatching\");}try {var semver = require(\"semver\");var valid = require(\"valid\");var deep = require(\"deep\");var deepEquals = deep.deepEquals;} catch (er) {assert(false, \"failed loading modules\");}try {if (oldDoc) {oldDoc.users = oldDoc.users || {};}doc.users = doc.users || {};} catch (er) {assert(false, \"failed checking users\");}try {if (isAdmin()) {return;}} catch (er) {assert(false, \"failed checking admin-ness\");}\nfunction diffObj(o, n, p) {p = p || \"\";var d = [];var seenKeys = [];for (var i in o) {seenKeys.push(i);if (n[i] === undefined) {d.push(\"Deleted: \" + p + i);} else if (typeof o[i] !== typeof n[i]) {d.push(\"Changed Type: \" + p + i);} else if (typeof o[i] === \"object\") {if (o[i]) {if (n[i]) {d = d.concat(diffObj(o[i], n[i], p + i + \".\"));} else {d.push(\"Nulled: \" + p + i);}} else {if (n[i]) {d.push(\"Un-nulled: \" + p + i);} else {}}} else if (o[i] !== n[i]) {d.push(\"Changed: \" + p + i + \" \" + JSON.stringify(o[i]) + \" -> \" + JSON.stringify(n[i]));}}for (var i in n) {if (-1 === seenKeys.indexOf(i)) {d.push(\"Added: \" + p + i);}}return d;}\n\ntry {assert(!doc.forbidden || doc._deleted, doc.forbidden);} catch (er) {assert(false, \"failed checking doc.forbidden or doc._deleted\");}try {if (oldDoc && !doc._deleted && deepEquals(doc, oldDoc, [[\"users\", user.name], [\"time\", \"modified\"]])) {return;}} catch (er) {assert(false, \"failed checking starred stuff\");}\nfunction validUser() {if (!oldDoc || !oldDoc.maintainers) {return true;}if (isAdmin()) {return true;}if (typeof oldDoc.maintainers !== \"object\") {return true;}for (var i = 0, l = oldDoc.maintainers.length; i < l; i++) {if (oldDoc.maintainers[i].name === user.name) {return true;}}return false;}\n\n\nfunction isAdmin() {if (dbCtx && dbCtx.admins) {if (dbCtx.admins.names && dbCtx.admins.roles && dbCtx.admins.names.indexOf(user.name) !== -1) {return true;}for (var i = 0; i < user.roles.length; i++) {if (dbCtx.admins.roles.indexOf(user.roles[i]) !== -1) {return true;}}}return user && user.roles.indexOf(\"_admin\") >= 0;}\n\ntry {var vu = validUser();} catch (er) {assert(false, \"problem checking user validity\");}if (!vu) {assert(vu, \"user: \" + user.name + \" not authorized to modify \" + oldDoc.name + \"\\n\" + diffObj(oldDoc, doc).join(\"\\n\"));}if (doc._deleted && doc.name === \"npm\") {throw {forbidden: \"you may not delete npm!\"};}if (doc._deleted) {return;}assert(valid.name(doc.name), \"name invalid: \" + doc.name);if (!oldDoc && doc.name !== doc.name.toLowerCase()) {assert(false, \"New packages must have all-lowercase names\");}assert(doc.name === doc._id, \"name must match _id\");assert(doc.name.length < 512, \"name is too long\");assert(!doc.mtime, \"doc.mtime is deprecated\");assert(!doc.ctime, \"doc.ctime is deprecated\");assert(typeof doc.time === \"object\", \"time must be object\");assert(typeof doc['dist-tags'] === \"object\", \"dist-tags must be object\");var versions = doc.versions;assert(typeof versions === \"object\", \"versions must be object\");var latest = doc['dist-tags'].latest;if (latest) {assert(versions[latest], \"dist-tags.latest must be valid version\");}var version = versions[latest];if (version) {if (!version.dist) {assert(false, \"no dist object in \" + latest + \" version\");}if (!version.dist.tarball) {assert(false, \"no tarball in \" + latest + \" version\");}if (!version.dist.shasum) {assert(false, \"no shasum in \" + latest + \" version\");}}for (var v in doc['dist-tags']) {var ver = doc['dist-tags'][v];assert(semver.valid(ver, true), v + \" version invalid version: \" + ver);assert(versions[ver], v + \" version missing: \" + ver);}var depCount = 0;var maxDeps = 1000;\nfunction ridiculousDeps() {if (++depCount > maxDeps) {assert(false, \"too many deps.  please be less ridiculous.\");}}\n\nfor (var ver in versions) {var version = versions[ver];assert(semver.valid(ver, true), \"invalid version: \" + ver);assert(typeof version === \"object\", \"version entries must be objects\");assert(version.version === ver, \"version must match: \" + ver);assert(version.name === doc._id, \"version \" + ver + \" has incorrect name: \" + version.name);depCount = 0;for (var dep in version.dependencies || {}) {ridiculousDeps();}for (var dep in version.devDependencies || {}) {ridiculousDeps();}for (var dep in version.optionalDependencies || {}) {ridiculousDeps();}if (oldDoc && oldDoc.versions && !oldDoc.versions[ver]) {assert(semver.valid(ver), \"Invalid SemVer 2.0 version: \" + ver);if (version.hasOwnProperty(\"scripts\")) {assert(version.scripts && typeof version.scripts === \"object\", \"'scripts' field must be an object\");for (var s in version.scripts) {assert(typeof version.scripts[s] === \"string\", \"Non-string script field: \" + s);}}}}assert(Array.isArray(doc.maintainers), \"maintainers should be a list of owners\");doc.maintainers.forEach(function (m) {assert(m.name && m.email, \"Maintainer should have name and email: \" + JSON.stringify(m));});var time = doc.time;var c = new Date(Date.parse(time.created)), m = new Date(Date.parse(time.modified));assert(c.toString() !== \"Invalid Date\", \"invalid created time: \" + JSON.stringify(time.created));assert(m.toString() !== \"Invalid Date\", \"invalid modified time: \" + JSON.stringify(time.modified));if (oldDoc && oldDoc.time && oldDoc.time.created && Date.parse(oldDoc.time.created)) {assert(Date.parse(oldDoc.time.created) === Date.parse(time.created), \"created time cannot be changed\");}if (oldDoc && oldDoc.users) {assert(deepEquals(doc.users, oldDoc.users, [[user.name]]), \"you may only alter your own 'star' setting\");}if (doc.url) {assert(false, \"Package redirection has been removed. Please update your publish scripts.\");}if (doc.description) {assert(typeof doc.description === \"string\", \"\\\"description\\\" field must be a string\");}var oldVersions = oldDoc ? oldDoc.versions || {} : {};var oldTime = oldDoc ? oldDoc.time || {} : {};var versions = Object.keys(doc.versions), modified = null, allowedChange = [[\"directories\"], [\"deprecated\"]];for (var i = 0, l = versions.length; i < l; i++) {var v = versions[i];if (!v) {continue;}assert(doc.time[v], \"must have time entry for \" + v);if (doc.versions[v] && oldDoc.versions[v]) {doc.versions[v].version = oldDoc.versions[v].version;}if (doc.versions[v] && oldDoc.versions[v] && !deepEquals(doc.versions[v], oldVersions[v], allowedChange)) {var t = Date.parse(doc.time[v]), n = Date.now();if (typeof doc.versions[v]._npmUser !== \"object\") {continue;}assert(typeof doc.versions[v]._npmUser === \"object\", \"_npmUser field must be object\\n(You probably need to upgrade your npm version)\");var _npmUser = doc.versions[v]._npmUser;assert(_npmUser.name === user.name, \"version=\" + v + \"\\n\" + \"user.name=\" + user.name + \"\\n\" + \"_npmUser.name=\" + _npmUser.name + \"\\n\" + \"_npmUser.name must === user.name\");var found = false;for (var j = 0, lm = doc.maintainers.length; j < lm; j++) {var m = doc.maintainers[j];if (m.name === doc.versions[v]._npmUser.name) {found = true;break;}}assert(found, \"_npmUser must be a current maintainer.\\n\" + \"maintainers=\" + JSON.stringify(doc.maintainers) + \"\\n\" + \"current user=\" + JSON.stringify(doc.versions[v]._npmUser));} else if (oldTime[v]) {assert(oldTime[v] === doc.time[v], v + \" time should not be modified 1\");}}for (var v in oldTime) {if (doc.versions[v] || !oldVersions[v]) {continue;}assert(doc.time[v] === oldTime[v], v + \" time should not be modified 2\");}},[object Object],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1270\n(\"_design/scratch\",[object Array],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1517\n()@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1562\n@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1573\n@:0\n">>}]}: net-alt
91 info trying registry request attempt 3 at 21:52:44
92 http PUT https://registry.npmjs.org/net-alt
93 http 500 https://registry.npmjs.org/net-alt
94 error publish Failed PUT 500
95 error Error: TypeError {[{<<"stack">>,
95 error    <<"([object Object],null,[object Object],[object Object])@validate_doc_update:316\n(function (doc, oldDoc, user, dbCtx) {\nfunction assert(ok, message) {if (!ok) {throw {forbidden: message};}}\n\nif (!user || !user.name) {throw {unauthorized: \"Please log in before writing to the db\"};}try {require(\"monkeypatch\").patch(Object, Date, Array, String);} catch (er) {assert(false, \"failed monkeypatching\");}try {var semver = require(\"semver\");var valid = require(\"valid\");var deep = require(\"deep\");var deepEquals = deep.deepEquals;} catch (er) {assert(false, \"failed loading modules\");}try {if (oldDoc) {oldDoc.users = oldDoc.users || {};}doc.users = doc.users || {};} catch (er) {assert(false, \"failed checking users\");}try {if (isAdmin()) {return;}} catch (er) {assert(false, \"failed checking admin-ness\");}\nfunction diffObj(o, n, p) {p = p || \"\";var d = [];var seenKeys = [];for (var i in o) {seenKeys.push(i);if (n[i] === undefined) {d.push(\"Deleted: \" + p + i);} else if (typeof o[i] !== typeof n[i]) {d.push(\"Changed Type: \" + p + i);} else if (typeof o[i] === \"object\") {if (o[i]) {if (n[i]) {d = d.concat(diffObj(o[i], n[i], p + i + \".\"));} else {d.push(\"Nulled: \" + p + i);}} else {if (n[i]) {d.push(\"Un-nulled: \" + p + i);} else {}}} else if (o[i] !== n[i]) {d.push(\"Changed: \" + p + i + \" \" + JSON.stringify(o[i]) + \" -> \" + JSON.stringify(n[i]));}}for (var i in n) {if (-1 === seenKeys.indexOf(i)) {d.push(\"Added: \" + p + i);}}return d;}\n\ntry {assert(!doc.forbidden || doc._deleted, doc.forbidden);} catch (er) {assert(false, \"failed checking doc.forbidden or doc._deleted\");}try {if (oldDoc && !doc._deleted && deepEquals(doc, oldDoc, [[\"users\", user.name], [\"time\", \"modified\"]])) {return;}} catch (er) {assert(false, \"failed checking starred stuff\");}\nfunction validUser() {if (!oldDoc || !oldDoc.maintainers) {return true;}if (isAdmin()) {return true;}if (typeof oldDoc.maintainers !== \"object\") {return true;}for (var i = 0, l = oldDoc.maintainers.length; i < l; i++) {if (oldDoc.maintainers[i].name === user.name) {return true;}}return false;}\n\n\nfunction isAdmin() {if (dbCtx && dbCtx.admins) {if (dbCtx.admins.names && dbCtx.admins.roles && dbCtx.admins.names.indexOf(user.name) !== -1) {return true;}for (var i = 0; i < user.roles.length; i++) {if (dbCtx.admins.roles.indexOf(user.roles[i]) !== -1) {return true;}}}return user && user.roles.indexOf(\"_admin\") >= 0;}\n\ntry {var vu = validUser();} catch (er) {assert(false, \"problem checking user validity\");}if (!vu) {assert(vu, \"user: \" + user.name + \" not authorized to modify \" + oldDoc.name + \"\\n\" + diffObj(oldDoc, doc).join(\"\\n\"));}if (doc._deleted && doc.name === \"npm\") {throw {forbidden: \"you may not delete npm!\"};}if (doc._deleted) {return;}assert(valid.name(doc.name), \"name invalid: \" + doc.name);if (!oldDoc && doc.name !== doc.name.toLowerCase()) {assert(false, \"New packages must have all-lowercase names\");}assert(doc.name === doc._id, \"name must match _id\");assert(doc.name.length < 512, \"name is too long\");assert(!doc.mtime, \"doc.mtime is deprecated\");assert(!doc.ctime, \"doc.ctime is deprecated\");assert(typeof doc.time === \"object\", \"time must be object\");assert(typeof doc['dist-tags'] === \"object\", \"dist-tags must be object\");var versions = doc.versions;assert(typeof versions === \"object\", \"versions must be object\");var latest = doc['dist-tags'].latest;if (latest) {assert(versions[latest], \"dist-tags.latest must be valid version\");}var version = versions[latest];if (version) {if (!version.dist) {assert(false, \"no dist object in \" + latest + \" version\");}if (!version.dist.tarball) {assert(false, \"no tarball in \" + latest + \" version\");}if (!version.dist.shasum) {assert(false, \"no shasum in \" + latest + \" version\");}}for (var v in doc['dist-tags']) {var ver = doc['dist-tags'][v];assert(semver.valid(ver, true), v + \" version invalid version: \" + ver);assert(versions[ver], v + \" version missing: \" + ver);}var depCount = 0;var maxDeps = 1000;\nfunction ridiculousDeps() {if (++depCount > maxDeps) {assert(false, \"too many deps.  please be less ridiculous.\");}}\n\nfor (var ver in versions) {var version = versions[ver];assert(semver.valid(ver, true), \"invalid version: \" + ver);assert(typeof version === \"object\", \"version entries must be objects\");assert(version.version === ver, \"version must match: \" + ver);assert(version.name === doc._id, \"version \" + ver + \" has incorrect name: \" + version.name);depCount = 0;for (var dep in version.dependencies || {}) {ridiculousDeps();}for (var dep in version.devDependencies || {}) {ridiculousDeps();}for (var dep in version.optionalDependencies || {}) {ridiculousDeps();}if (oldDoc && oldDoc.versions && !oldDoc.versions[ver]) {assert(semver.valid(ver), \"Invalid SemVer 2.0 version: \" + ver);if (version.hasOwnProperty(\"scripts\")) {assert(version.scripts && typeof version.scripts === \"object\", \"'scripts' field must be an object\");for (var s in version.scripts) {assert(typeof version.scripts[s] === \"string\", \"Non-string script field: \" + s);}}}}assert(Array.isArray(doc.maintainers), \"maintainers should be a list of owners\");doc.maintainers.forEach(function (m) {assert(m.name && m.email, \"Maintainer should have name and email: \" + JSON.stringify(m));});var time = doc.time;var c = new Date(Date.parse(time.created)), m = new Date(Date.parse(time.modified));assert(c.toString() !== \"Invalid Date\", \"invalid created time: \" + JSON.stringify(time.created));assert(m.toString() !== \"Invalid Date\", \"invalid modified time: \" + JSON.stringify(time.modified));if (oldDoc && oldDoc.time && oldDoc.time.created && Date.parse(oldDoc.time.created)) {assert(Date.parse(oldDoc.time.created) === Date.parse(time.created), \"created time cannot be changed\");}if (oldDoc && oldDoc.users) {assert(deepEquals(doc.users, oldDoc.users, [[user.name]]), \"you may only alter your own 'star' setting\");}if (doc.url) {assert(false, \"Package redirection has been removed. Please update your publish scripts.\");}if (doc.description) {assert(typeof doc.description === \"string\", \"\\\"description\\\" field must be a string\");}var oldVersions = oldDoc ? oldDoc.versions || {} : {};var oldTime = oldDoc ? oldDoc.time || {} : {};var versions = Object.keys(doc.versions), modified = null, allowedChange = [[\"directories\"], [\"deprecated\"]];for (var i = 0, l = versions.length; i < l; i++) {var v = versions[i];if (!v) {continue;}assert(doc.time[v], \"must have time entry for \" + v);if (doc.versions[v] && oldDoc.versions[v]) {doc.versions[v].version = oldDoc.versions[v].version;}if (doc.versions[v] && oldDoc.versions[v] && !deepEquals(doc.versions[v], oldVersions[v], allowedChange)) {var t = Date.parse(doc.time[v]), n = Date.now();if (typeof doc.versions[v]._npmUser !== \"object\") {continue;}assert(typeof doc.versions[v]._npmUser === \"object\", \"_npmUser field must be object\\n(You probably need to upgrade your npm version)\");var _npmUser = doc.versions[v]._npmUser;assert(_npmUser.name === user.name, \"version=\" + v + \"\\n\" + \"user.name=\" + user.name + \"\\n\" + \"_npmUser.name=\" + _npmUser.name + \"\\n\" + \"_npmUser.name must === user.name\");var found = false;for (var j = 0, lm = doc.maintainers.length; j < lm; j++) {var m = doc.maintainers[j];if (m.name === doc.versions[v]._npmUser.name) {found = true;break;}}assert(found, \"_npmUser must be a current maintainer.\\n\" + \"maintainers=\" + JSON.stringify(doc.maintainers) + \"\\n\" + \"current user=\" + JSON.stringify(doc.versions[v]._npmUser));} else if (oldTime[v]) {assert(oldTime[v] === doc.time[v], v + \" time should not be modified 1\");}}for (var v in oldTime) {if (doc.versions[v] || !oldVersions[v]) {continue;}assert(doc.time[v] === oldTime[v], v + \" time should not be modified 2\");}},[object Object],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1270\n(\"_design/scratch\",[object Array],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1517\n()@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1562\n@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1573\n@:0\n">>}]}: net-alt
95 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:275:14)
95 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
95 error     at Request.EventEmitter.emit (events.js:98:17)
95 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
95 error     at Request.EventEmitter.emit (events.js:117:20)
95 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
95 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
95 error     at _stream_readable.js:920:16
95 error     at process._tickCallback (node.js:415:13)
96 error If you need help, you may report this *entire* log,
96 error including the npm and node versions, at:
96 error     <http://github.com/isaacs/npm/issues>
97 error System Darwin 13.0.0
98 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
99 error cwd /Users/liuyazhong/workspace/net-alt
100 error node -v v0.10.24
101 error npm -v 1.3.21
102 verbose exit [ 1, true ]
