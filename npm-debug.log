0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/liuyazhong/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
12 verbose folder .
13 info prepublish net-alt@0.0.1
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/liuyazhong/.npm/1f1177db-tar.lock
16 silly lockFile b7c1a6a4-81149-0-7938008059281856-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
17 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz /Users/liuyazhong/.npm/b7c1a6a4-81149-0-7938008059281856-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile b7c1a6a4-81149-0-7938008059281856-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
21 silly lockFile b7c1a6a4-81149-0-7938008059281856-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
22 verbose tar unpack /var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
23 silly lockFile 5d1f39c0-81149-0-7938008059281856-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package
24 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package /Users/liuyazhong/.npm/5d1f39c0-81149-0-7938008059281856-package.lock
25 silly lockFile b7c1a6a4-81149-0-7938008059281856-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
26 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz /Users/liuyazhong/.npm/b7c1a6a4-81149-0-7938008059281856-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry README.md
30 silly gunzTarPerm extractEntry benchmark.js
31 silly gunzTarPerm extractEntry example.js
32 silly gunzTarPerm extractEntry .gitignire
33 silly gunzTarPerm extractEntry binding.gyp
34 silly gunzTarPerm extractEntry build/Makefile
35 silly gunzTarPerm extractEntry build/Release/.deps/Release/net.node.d
36 silly gunzTarPerm extractEntry build/Release/.deps/Release/obj.target/net/src/net.o.d
37 silly gunzTarPerm extractEntry build/Release/linker.lock
38 silly gunzTarPerm extractEntry build/Release/net.node
39 silly gunzTarPerm extractEntry build/Release/obj.target/net/src/net.o
40 silly gunzTarPerm extractEntry build/binding.Makefile
41 silly gunzTarPerm extractEntry build/config.gypi
42 silly gunzTarPerm extractEntry build/gyp-mac-tool
43 silly gunzTarPerm extractEntry build/net.target.mk
44 silly gunzTarPerm extractEntry lib/index.js
45 silly gunzTarPerm extractEntry src/net.cc
46 silly gunzTarPerm extractEntry src/net.h
47 silly lockFile 5d1f39c0-81149-0-7938008059281856-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package
48 silly lockFile 5d1f39c0-81149-0-7938008059281856-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package
49 silly lockFile b7c1a6a4-81149-0-7938008059281856-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
50 silly lockFile b7c1a6a4-81149-0-7938008059281856-tmp-tgz tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/tmp.tgz
51 verbose tar pack [ '/Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz',
51 verbose tar pack   '/var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package' ]
52 verbose tarball /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
53 verbose folder /var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package
54 silly lockFile 5d1f39c0-81149-0-7938008059281856-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package
55 verbose lock tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package /Users/liuyazhong/.npm/5d1f39c0-81149-0-7938008059281856-package.lock
56 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
57 verbose lock tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz /Users/liuyazhong/.npm/82b61cdb-ng-npm-net-alt-0-0-1-package-tgz.lock
58 silly lockFile 5d1f39c0-81149-0-7938008059281856-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package
59 silly lockFile 5d1f39c0-81149-0-7938008059281856-package tar:///var/folders/z4/w4hcv8ks6d35_djq02pl8glh0000gn/T/npm-38148-Ka6qMUMC/1390139181149-0.7938008059281856/package
60 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
61 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
62 silly lockFile 631fd88c-azhong-npm-net-alt-0-0-1-package /Users/liuyazhong/.npm/net-alt/0.0.1/package
63 verbose lock /Users/liuyazhong/.npm/net-alt/0.0.1/package /Users/liuyazhong/.npm/631fd88c-azhong-npm-net-alt-0-0-1-package.lock
64 silly lockFile 631fd88c-azhong-npm-net-alt-0-0-1-package /Users/liuyazhong/.npm/net-alt/0.0.1/package
65 silly lockFile 631fd88c-azhong-npm-net-alt-0-0-1-package /Users/liuyazhong/.npm/net-alt/0.0.1/package
66 verbose tar unpack /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
67 silly lockFile 3d02b669-azhong-npm-net-alt-0-0-1-package tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package
68 verbose lock tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package /Users/liuyazhong/.npm/3d02b669-azhong-npm-net-alt-0-0-1-package.lock
69 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
70 verbose lock tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz /Users/liuyazhong/.npm/82b61cdb-ng-npm-net-alt-0-0-1-package-tgz.lock
71 silly gunzTarPerm modes [ '755', '644' ]
72 silly gunzTarPerm extractEntry package.json
73 silly gunzTarPerm extractEntry README.md
74 silly gunzTarPerm extractEntry benchmark.js
75 silly gunzTarPerm extractEntry example.js
76 silly gunzTarPerm extractEntry .gitignire
77 silly gunzTarPerm extractEntry binding.gyp
78 silly gunzTarPerm extractEntry build/Makefile
79 silly gunzTarPerm extractEntry build/Release/.deps/Release/net.node.d
80 silly gunzTarPerm extractEntry build/Release/.deps/Release/obj.target/net/src/net.o.d
81 silly gunzTarPerm extractEntry build/Release/linker.lock
82 silly gunzTarPerm extractEntry build/Release/net.node
83 silly gunzTarPerm extractEntry build/Release/obj.target/net/src/net.o
84 silly gunzTarPerm extractEntry build/binding.Makefile
85 silly gunzTarPerm extractEntry build/config.gypi
86 silly gunzTarPerm extractEntry build/gyp-mac-tool
87 silly gunzTarPerm extractEntry build/net.target.mk
88 silly gunzTarPerm extractEntry lib/index.js
89 silly gunzTarPerm extractEntry src/net.cc
90 silly gunzTarPerm extractEntry src/net.h
91 silly lockFile 3d02b669-azhong-npm-net-alt-0-0-1-package tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package
92 silly lockFile 3d02b669-azhong-npm-net-alt-0-0-1-package tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package
93 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
94 silly lockFile 82b61cdb-ng-npm-net-alt-0-0-1-package-tgz tar:///Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz
95 verbose chmod /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz 644
96 verbose chown /Users/liuyazhong/.npm/net-alt/0.0.1/package.tgz [ 501, 20 ]
97 silly lockFile 3a52ce78- .
98 silly lockFile 3a52ce78- .
99 silly publish { name: 'net-alt',
99 silly publish   version: '0.0.1',
99 silly publish   author: { name: 'Yorkie Neil', email: 'yorkiefixer@gmail.com' },
99 silly publish   description: 'alternative module to net, more lighter',
99 silly publish   keywords: [ 'tcp', 'net', 'alternative module' ],
99 silly publish   repository: { type: 'git', url: 'git://github.com/yorkie/net-alt.git' },
99 silly publish   homepage: 'https://github.com/yorkie/net-alt',
99 silly publish   main: 'lib/index.js',
99 silly publish   scripts: { install: 'node-gyp configure build' },
99 silly publish   license: 'MIT',
99 silly publish   readme: '\n# SimpleNet\n\nAlternative module to net, It\'s under being developed.\n\n\n### Installation\n\n```bash\n$ npm install net-alt\n```\n\n\n### Usage\n\n```js\nvar socket = new netAlt.SimpleNet(143, \'163.177.65.209\');\nsocket.connect(function(err, data) {\n  this.write(\'client says hello!\\r\\n\');\n  this.end(); // close fd via this.\n});\n```\n\n\n### Current comparison with 200 connections\n\n* net(NodeJS): 8.8M\n\n* SimpleNet: 7.2M\n\n\n### LICENSE\n\nMIT',
99 silly publish   readmeFilename: 'README.md',
99 silly publish   bugs: { url: 'https://github.com/yorkie/net-alt/issues' },
99 silly publish   _id: 'net-alt@0.0.1',
99 silly publish   dist: { shasum: '58a5380eca79a62b07d2640a4b82e9dab75389a3' },
99 silly publish   _from: '.' }
100 verbose url raw net-alt
101 verbose url resolving [ 'https://registry.npmjs.org/', './net-alt' ]
102 verbose url resolved https://registry.npmjs.org/net-alt
103 info trying registry request attempt 1 at 21:46:21
104 http PUT https://registry.npmjs.org/net-alt
105 http 500 https://registry.npmjs.org/net-alt
106 info retry will retry, error on last attempt: Error: TypeError {[{<<"stack">>,
106 info retry    <<"([object Object],null,[object Object],[object Object])@validate_doc_update:316\n(function (doc, oldDoc, user, dbCtx) {\nfunction assert(ok, message) {if (!ok) {throw {forbidden: message};}}\n\nif (!user || !user.name) {throw {unauthorized: \"Please log in before writing to the db\"};}try {require(\"monkeypatch\").patch(Object, Date, Array, String);} catch (er) {assert(false, \"failed monkeypatching\");}try {var semver = require(\"semver\");var valid = require(\"valid\");var deep = require(\"deep\");var deepEquals = deep.deepEquals;} catch (er) {assert(false, \"failed loading modules\");}try {if (oldDoc) {oldDoc.users = oldDoc.users || {};}doc.users = doc.users || {};} catch (er) {assert(false, \"failed checking users\");}try {if (isAdmin()) {return;}} catch (er) {assert(false, \"failed checking admin-ness\");}\nfunction diffObj(o, n, p) {p = p || \"\";var d = [];var seenKeys = [];for (var i in o) {seenKeys.push(i);if (n[i] === undefined) {d.push(\"Deleted: \" + p + i);} else if (typeof o[i] !== typeof n[i]) {d.push(\"Changed Type: \" + p + i);} else if (typeof o[i] === \"object\") {if (o[i]) {if (n[i]) {d = d.concat(diffObj(o[i], n[i], p + i + \".\"));} else {d.push(\"Nulled: \" + p + i);}} else {if (n[i]) {d.push(\"Un-nulled: \" + p + i);} else {}}} else if (o[i] !== n[i]) {d.push(\"Changed: \" + p + i + \" \" + JSON.stringify(o[i]) + \" -> \" + JSON.stringify(n[i]));}}for (var i in n) {if (-1 === seenKeys.indexOf(i)) {d.push(\"Added: \" + p + i);}}return d;}\n\ntry {assert(!doc.forbidden || doc._deleted, doc.forbidden);} catch (er) {assert(false, \"failed checking doc.forbidden or doc._deleted\");}try {if (oldDoc && !doc._deleted && deepEquals(doc, oldDoc, [[\"users\", user.name], [\"time\", \"modified\"]])) {return;}} catch (er) {assert(false, \"failed checking starred stuff\");}\nfunction validUser() {if (!oldDoc || !oldDoc.maintainers) {return true;}if (isAdmin()) {return true;}if (typeof oldDoc.maintainers !== \"object\") {return true;}for (var i = 0, l = oldDoc.maintainers.length; i < l; i++) {if (oldDoc.maintainers[i].name === user.name) {return true;}}return false;}\n\n\nfunction isAdmin() {if (dbCtx && dbCtx.admins) {if (dbCtx.admins.names && dbCtx.admins.roles && dbCtx.admins.names.indexOf(user.name) !== -1) {return true;}for (var i = 0; i < user.roles.length; i++) {if (dbCtx.admins.roles.indexOf(user.roles[i]) !== -1) {return true;}}}return user && user.roles.indexOf(\"_admin\") >= 0;}\n\ntry {var vu = validUser();} catch (er) {assert(false, \"problem checking user validity\");}if (!vu) {assert(vu, \"user: \" + user.name + \" not authorized to modify \" + oldDoc.name + \"\\n\" + diffObj(oldDoc, doc).join(\"\\n\"));}if (doc._deleted && doc.name === \"npm\") {throw {forbidden: \"you may not delete npm!\"};}if (doc._deleted) {return;}assert(valid.name(doc.name), \"name invalid: \" + doc.name);if (!oldDoc && doc.name !== doc.name.toLowerCase()) {assert(false, \"New packages must have all-lowercase names\");}assert(doc.name === doc._id, \"name must match _id\");assert(doc.name.length < 512, \"name is too long\");assert(!doc.mtime, \"doc.mtime is deprecated\");assert(!doc.ctime, \"doc.ctime is deprecated\");assert(typeof doc.time === \"object\", \"time must be object\");assert(typeof doc['dist-tags'] === \"object\", \"dist-tags must be object\");var versions = doc.versions;assert(typeof versions === \"object\", \"versions must be object\");var latest = doc['dist-tags'].latest;if (latest) {assert(versions[latest], \"dist-tags.latest must be valid version\");}var version = versions[latest];if (version) {if (!version.dist) {assert(false, \"no dist object in \" + latest + \" version\");}if (!version.dist.tarball) {assert(false, \"no tarball in \" + latest + \" version\");}if (!version.dist.shasum) {assert(false, \"no shasum in \" + latest + \" version\");}}for (var v in doc['dist-tags']) {var ver = doc['dist-tags'][v];assert(semver.valid(ver, true), v + \" version invalid version: \" + ver);assert(versions[ver], v + \" version missing: \" + ver);}var depCount = 0;var maxDeps = 1000;\nfunction ridiculousDeps() {if (++depCount > maxDeps) {assert(false, \"too many deps.  please be less ridiculous.\");}}\n\nfor (var ver in versions) {var version = versions[ver];assert(semver.valid(ver, true), \"invalid version: \" + ver);assert(typeof version === \"object\", \"version entries must be objects\");assert(version.version === ver, \"version must match: \" + ver);assert(version.name === doc._id, \"version \" + ver + \" has incorrect name: \" + version.name);depCount = 0;for (var dep in version.dependencies || {}) {ridiculousDeps();}for (var dep in version.devDependencies || {}) {ridiculousDeps();}for (var dep in version.optionalDependencies || {}) {ridiculousDeps();}if (oldDoc && oldDoc.versions && !oldDoc.versions[ver]) {assert(semver.valid(ver), \"Invalid SemVer 2.0 version: \" + ver);if (version.hasOwnProperty(\"scripts\")) {assert(version.scripts && typeof version.scripts === \"object\", \"'scripts' field must be an object\");for (var s in version.scripts) {assert(typeof version.scripts[s] === \"string\", \"Non-string script field: \" + s);}}}}assert(Array.isArray(doc.maintainers), \"maintainers should be a list of owners\");doc.maintainers.forEach(function (m) {assert(m.name && m.email, \"Maintainer should have name and email: \" + JSON.stringify(m));});var time = doc.time;var c = new Date(Date.parse(time.created)), m = new Date(Date.parse(time.modified));assert(c.toString() !== \"Invalid Date\", \"invalid created time: \" + JSON.stringify(time.created));assert(m.toString() !== \"Invalid Date\", \"invalid modified time: \" + JSON.stringify(time.modified));if (oldDoc && oldDoc.time && oldDoc.time.created && Date.parse(oldDoc.time.created)) {assert(Date.parse(oldDoc.time.created) === Date.parse(time.created), \"created time cannot be changed\");}if (oldDoc && oldDoc.users) {assert(deepEquals(doc.users, oldDoc.users, [[user.name]]), \"you may only alter your own 'star' setting\");}if (doc.url) {assert(false, \"Package redirection has been removed. Please update your publish scripts.\");}if (doc.description) {assert(typeof doc.description === \"string\", \"\\\"description\\\" field must be a string\");}var oldVersions = oldDoc ? oldDoc.versions || {} : {};var oldTime = oldDoc ? oldDoc.time || {} : {};var versions = Object.keys(doc.versions), modified = null, allowedChange = [[\"directories\"], [\"deprecated\"]];for (var i = 0, l = versions.length; i < l; i++) {var v = versions[i];if (!v) {continue;}assert(doc.time[v], \"must have time entry for \" + v);if (doc.versions[v] && oldDoc.versions[v]) {doc.versions[v].version = oldDoc.versions[v].version;}if (doc.versions[v] && oldDoc.versions[v] && !deepEquals(doc.versions[v], oldVersions[v], allowedChange)) {var t = Date.parse(doc.time[v]), n = Date.now();if (typeof doc.versions[v]._npmUser !== \"object\") {continue;}assert(typeof doc.versions[v]._npmUser === \"object\", \"_npmUser field must be object\\n(You probably need to upgrade your npm version)\");var _npmUser = doc.versions[v]._npmUser;assert(_npmUser.name === user.name, \"version=\" + v + \"\\n\" + \"user.name=\" + user.name + \"\\n\" + \"_npmUser.name=\" + _npmUser.name + \"\\n\" + \"_npmUser.name must === user.name\");var found = false;for (var j = 0, lm = doc.maintainers.length; j < lm; j++) {var m = doc.maintainers[j];if (m.name === doc.versions[v]._npmUser.name) {found = true;break;}}assert(found, \"_npmUser must be a current maintainer.\\n\" + \"maintainers=\" + JSON.stringify(doc.maintainers) + \"\\n\" + \"current user=\" + JSON.stringify(doc.versions[v]._npmUser));} else if (oldTime[v]) {assert(oldTime[v] === doc.time[v], v + \" time should not be modified 1\");}}for (var v in oldTime) {if (doc.versions[v] || !oldVersions[v]) {continue;}assert(doc.time[v] === oldTime[v], v + \" time should not be modified 2\");}},[object Object],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1270\n(\"_design/scratch\",[object Array],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1517\n()@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1562\n@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1573\n@:0\n">>}]}: net-alt
107 info trying registry request attempt 2 at 21:46:34
108 http PUT https://registry.npmjs.org/net-alt
109 http 500 https://registry.npmjs.org/net-alt
110 info retry will retry, error on last attempt: Error: TypeError {[{<<"stack">>,
110 info retry    <<"([object Object],null,[object Object],[object Object])@validate_doc_update:316\n(function (doc, oldDoc, user, dbCtx) {\nfunction assert(ok, message) {if (!ok) {throw {forbidden: message};}}\n\nif (!user || !user.name) {throw {unauthorized: \"Please log in before writing to the db\"};}try {require(\"monkeypatch\").patch(Object, Date, Array, String);} catch (er) {assert(false, \"failed monkeypatching\");}try {var semver = require(\"semver\");var valid = require(\"valid\");var deep = require(\"deep\");var deepEquals = deep.deepEquals;} catch (er) {assert(false, \"failed loading modules\");}try {if (oldDoc) {oldDoc.users = oldDoc.users || {};}doc.users = doc.users || {};} catch (er) {assert(false, \"failed checking users\");}try {if (isAdmin()) {return;}} catch (er) {assert(false, \"failed checking admin-ness\");}\nfunction diffObj(o, n, p) {p = p || \"\";var d = [];var seenKeys = [];for (var i in o) {seenKeys.push(i);if (n[i] === undefined) {d.push(\"Deleted: \" + p + i);} else if (typeof o[i] !== typeof n[i]) {d.push(\"Changed Type: \" + p + i);} else if (typeof o[i] === \"object\") {if (o[i]) {if (n[i]) {d = d.concat(diffObj(o[i], n[i], p + i + \".\"));} else {d.push(\"Nulled: \" + p + i);}} else {if (n[i]) {d.push(\"Un-nulled: \" + p + i);} else {}}} else if (o[i] !== n[i]) {d.push(\"Changed: \" + p + i + \" \" + JSON.stringify(o[i]) + \" -> \" + JSON.stringify(n[i]));}}for (var i in n) {if (-1 === seenKeys.indexOf(i)) {d.push(\"Added: \" + p + i);}}return d;}\n\ntry {assert(!doc.forbidden || doc._deleted, doc.forbidden);} catch (er) {assert(false, \"failed checking doc.forbidden or doc._deleted\");}try {if (oldDoc && !doc._deleted && deepEquals(doc, oldDoc, [[\"users\", user.name], [\"time\", \"modified\"]])) {return;}} catch (er) {assert(false, \"failed checking starred stuff\");}\nfunction validUser() {if (!oldDoc || !oldDoc.maintainers) {return true;}if (isAdmin()) {return true;}if (typeof oldDoc.maintainers !== \"object\") {return true;}for (var i = 0, l = oldDoc.maintainers.length; i < l; i++) {if (oldDoc.maintainers[i].name === user.name) {return true;}}return false;}\n\n\nfunction isAdmin() {if (dbCtx && dbCtx.admins) {if (dbCtx.admins.names && dbCtx.admins.roles && dbCtx.admins.names.indexOf(user.name) !== -1) {return true;}for (var i = 0; i < user.roles.length; i++) {if (dbCtx.admins.roles.indexOf(user.roles[i]) !== -1) {return true;}}}return user && user.roles.indexOf(\"_admin\") >= 0;}\n\ntry {var vu = validUser();} catch (er) {assert(false, \"problem checking user validity\");}if (!vu) {assert(vu, \"user: \" + user.name + \" not authorized to modify \" + oldDoc.name + \"\\n\" + diffObj(oldDoc, doc).join(\"\\n\"));}if (doc._deleted && doc.name === \"npm\") {throw {forbidden: \"you may not delete npm!\"};}if (doc._deleted) {return;}assert(valid.name(doc.name), \"name invalid: \" + doc.name);if (!oldDoc && doc.name !== doc.name.toLowerCase()) {assert(false, \"New packages must have all-lowercase names\");}assert(doc.name === doc._id, \"name must match _id\");assert(doc.name.length < 512, \"name is too long\");assert(!doc.mtime, \"doc.mtime is deprecated\");assert(!doc.ctime, \"doc.ctime is deprecated\");assert(typeof doc.time === \"object\", \"time must be object\");assert(typeof doc['dist-tags'] === \"object\", \"dist-tags must be object\");var versions = doc.versions;assert(typeof versions === \"object\", \"versions must be object\");var latest = doc['dist-tags'].latest;if (latest) {assert(versions[latest], \"dist-tags.latest must be valid version\");}var version = versions[latest];if (version) {if (!version.dist) {assert(false, \"no dist object in \" + latest + \" version\");}if (!version.dist.tarball) {assert(false, \"no tarball in \" + latest + \" version\");}if (!version.dist.shasum) {assert(false, \"no shasum in \" + latest + \" version\");}}for (var v in doc['dist-tags']) {var ver = doc['dist-tags'][v];assert(semver.valid(ver, true), v + \" version invalid version: \" + ver);assert(versions[ver], v + \" version missing: \" + ver);}var depCount = 0;var maxDeps = 1000;\nfunction ridiculousDeps() {if (++depCount > maxDeps) {assert(false, \"too many deps.  please be less ridiculous.\");}}\n\nfor (var ver in versions) {var version = versions[ver];assert(semver.valid(ver, true), \"invalid version: \" + ver);assert(typeof version === \"object\", \"version entries must be objects\");assert(version.version === ver, \"version must match: \" + ver);assert(version.name === doc._id, \"version \" + ver + \" has incorrect name: \" + version.name);depCount = 0;for (var dep in version.dependencies || {}) {ridiculousDeps();}for (var dep in version.devDependencies || {}) {ridiculousDeps();}for (var dep in version.optionalDependencies || {}) {ridiculousDeps();}if (oldDoc && oldDoc.versions && !oldDoc.versions[ver]) {assert(semver.valid(ver), \"Invalid SemVer 2.0 version: \" + ver);if (version.hasOwnProperty(\"scripts\")) {assert(version.scripts && typeof version.scripts === \"object\", \"'scripts' field must be an object\");for (var s in version.scripts) {assert(typeof version.scripts[s] === \"string\", \"Non-string script field: \" + s);}}}}assert(Array.isArray(doc.maintainers), \"maintainers should be a list of owners\");doc.maintainers.forEach(function (m) {assert(m.name && m.email, \"Maintainer should have name and email: \" + JSON.stringify(m));});var time = doc.time;var c = new Date(Date.parse(time.created)), m = new Date(Date.parse(time.modified));assert(c.toString() !== \"Invalid Date\", \"invalid created time: \" + JSON.stringify(time.created));assert(m.toString() !== \"Invalid Date\", \"invalid modified time: \" + JSON.stringify(time.modified));if (oldDoc && oldDoc.time && oldDoc.time.created && Date.parse(oldDoc.time.created)) {assert(Date.parse(oldDoc.time.created) === Date.parse(time.created), \"created time cannot be changed\");}if (oldDoc && oldDoc.users) {assert(deepEquals(doc.users, oldDoc.users, [[user.name]]), \"you may only alter your own 'star' setting\");}if (doc.url) {assert(false, \"Package redirection has been removed. Please update your publish scripts.\");}if (doc.description) {assert(typeof doc.description === \"string\", \"\\\"description\\\" field must be a string\");}var oldVersions = oldDoc ? oldDoc.versions || {} : {};var oldTime = oldDoc ? oldDoc.time || {} : {};var versions = Object.keys(doc.versions), modified = null, allowedChange = [[\"directories\"], [\"deprecated\"]];for (var i = 0, l = versions.length; i < l; i++) {var v = versions[i];if (!v) {continue;}assert(doc.time[v], \"must have time entry for \" + v);if (doc.versions[v] && oldDoc.versions[v]) {doc.versions[v].version = oldDoc.versions[v].version;}if (doc.versions[v] && oldDoc.versions[v] && !deepEquals(doc.versions[v], oldVersions[v], allowedChange)) {var t = Date.parse(doc.time[v]), n = Date.now();if (typeof doc.versions[v]._npmUser !== \"object\") {continue;}assert(typeof doc.versions[v]._npmUser === \"object\", \"_npmUser field must be object\\n(You probably need to upgrade your npm version)\");var _npmUser = doc.versions[v]._npmUser;assert(_npmUser.name === user.name, \"version=\" + v + \"\\n\" + \"user.name=\" + user.name + \"\\n\" + \"_npmUser.name=\" + _npmUser.name + \"\\n\" + \"_npmUser.name must === user.name\");var found = false;for (var j = 0, lm = doc.maintainers.length; j < lm; j++) {var m = doc.maintainers[j];if (m.name === doc.versions[v]._npmUser.name) {found = true;break;}}assert(found, \"_npmUser must be a current maintainer.\\n\" + \"maintainers=\" + JSON.stringify(doc.maintainers) + \"\\n\" + \"current user=\" + JSON.stringify(doc.versions[v]._npmUser));} else if (oldTime[v]) {assert(oldTime[v] === doc.time[v], v + \" time should not be modified 1\");}}for (var v in oldTime) {if (doc.versions[v] || !oldVersions[v]) {continue;}assert(doc.time[v] === oldTime[v], v + \" time should not be modified 2\");}},[object Object],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1270\n(\"_design/scratch\",[object Array],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1517\n()@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1562\n@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1573\n@:0\n">>}]}: net-alt
111 info trying registry request attempt 3 at 21:47:37
112 http PUT https://registry.npmjs.org/net-alt
113 http 500 https://registry.npmjs.org/net-alt
114 error publish Failed PUT 500
115 error Error: TypeError {[{<<"stack">>,
115 error    <<"([object Object],null,[object Object],[object Object])@validate_doc_update:316\n(function (doc, oldDoc, user, dbCtx) {\nfunction assert(ok, message) {if (!ok) {throw {forbidden: message};}}\n\nif (!user || !user.name) {throw {unauthorized: \"Please log in before writing to the db\"};}try {require(\"monkeypatch\").patch(Object, Date, Array, String);} catch (er) {assert(false, \"failed monkeypatching\");}try {var semver = require(\"semver\");var valid = require(\"valid\");var deep = require(\"deep\");var deepEquals = deep.deepEquals;} catch (er) {assert(false, \"failed loading modules\");}try {if (oldDoc) {oldDoc.users = oldDoc.users || {};}doc.users = doc.users || {};} catch (er) {assert(false, \"failed checking users\");}try {if (isAdmin()) {return;}} catch (er) {assert(false, \"failed checking admin-ness\");}\nfunction diffObj(o, n, p) {p = p || \"\";var d = [];var seenKeys = [];for (var i in o) {seenKeys.push(i);if (n[i] === undefined) {d.push(\"Deleted: \" + p + i);} else if (typeof o[i] !== typeof n[i]) {d.push(\"Changed Type: \" + p + i);} else if (typeof o[i] === \"object\") {if (o[i]) {if (n[i]) {d = d.concat(diffObj(o[i], n[i], p + i + \".\"));} else {d.push(\"Nulled: \" + p + i);}} else {if (n[i]) {d.push(\"Un-nulled: \" + p + i);} else {}}} else if (o[i] !== n[i]) {d.push(\"Changed: \" + p + i + \" \" + JSON.stringify(o[i]) + \" -> \" + JSON.stringify(n[i]));}}for (var i in n) {if (-1 === seenKeys.indexOf(i)) {d.push(\"Added: \" + p + i);}}return d;}\n\ntry {assert(!doc.forbidden || doc._deleted, doc.forbidden);} catch (er) {assert(false, \"failed checking doc.forbidden or doc._deleted\");}try {if (oldDoc && !doc._deleted && deepEquals(doc, oldDoc, [[\"users\", user.name], [\"time\", \"modified\"]])) {return;}} catch (er) {assert(false, \"failed checking starred stuff\");}\nfunction validUser() {if (!oldDoc || !oldDoc.maintainers) {return true;}if (isAdmin()) {return true;}if (typeof oldDoc.maintainers !== \"object\") {return true;}for (var i = 0, l = oldDoc.maintainers.length; i < l; i++) {if (oldDoc.maintainers[i].name === user.name) {return true;}}return false;}\n\n\nfunction isAdmin() {if (dbCtx && dbCtx.admins) {if (dbCtx.admins.names && dbCtx.admins.roles && dbCtx.admins.names.indexOf(user.name) !== -1) {return true;}for (var i = 0; i < user.roles.length; i++) {if (dbCtx.admins.roles.indexOf(user.roles[i]) !== -1) {return true;}}}return user && user.roles.indexOf(\"_admin\") >= 0;}\n\ntry {var vu = validUser();} catch (er) {assert(false, \"problem checking user validity\");}if (!vu) {assert(vu, \"user: \" + user.name + \" not authorized to modify \" + oldDoc.name + \"\\n\" + diffObj(oldDoc, doc).join(\"\\n\"));}if (doc._deleted && doc.name === \"npm\") {throw {forbidden: \"you may not delete npm!\"};}if (doc._deleted) {return;}assert(valid.name(doc.name), \"name invalid: \" + doc.name);if (!oldDoc && doc.name !== doc.name.toLowerCase()) {assert(false, \"New packages must have all-lowercase names\");}assert(doc.name === doc._id, \"name must match _id\");assert(doc.name.length < 512, \"name is too long\");assert(!doc.mtime, \"doc.mtime is deprecated\");assert(!doc.ctime, \"doc.ctime is deprecated\");assert(typeof doc.time === \"object\", \"time must be object\");assert(typeof doc['dist-tags'] === \"object\", \"dist-tags must be object\");var versions = doc.versions;assert(typeof versions === \"object\", \"versions must be object\");var latest = doc['dist-tags'].latest;if (latest) {assert(versions[latest], \"dist-tags.latest must be valid version\");}var version = versions[latest];if (version) {if (!version.dist) {assert(false, \"no dist object in \" + latest + \" version\");}if (!version.dist.tarball) {assert(false, \"no tarball in \" + latest + \" version\");}if (!version.dist.shasum) {assert(false, \"no shasum in \" + latest + \" version\");}}for (var v in doc['dist-tags']) {var ver = doc['dist-tags'][v];assert(semver.valid(ver, true), v + \" version invalid version: \" + ver);assert(versions[ver], v + \" version missing: \" + ver);}var depCount = 0;var maxDeps = 1000;\nfunction ridiculousDeps() {if (++depCount > maxDeps) {assert(false, \"too many deps.  please be less ridiculous.\");}}\n\nfor (var ver in versions) {var version = versions[ver];assert(semver.valid(ver, true), \"invalid version: \" + ver);assert(typeof version === \"object\", \"version entries must be objects\");assert(version.version === ver, \"version must match: \" + ver);assert(version.name === doc._id, \"version \" + ver + \" has incorrect name: \" + version.name);depCount = 0;for (var dep in version.dependencies || {}) {ridiculousDeps();}for (var dep in version.devDependencies || {}) {ridiculousDeps();}for (var dep in version.optionalDependencies || {}) {ridiculousDeps();}if (oldDoc && oldDoc.versions && !oldDoc.versions[ver]) {assert(semver.valid(ver), \"Invalid SemVer 2.0 version: \" + ver);if (version.hasOwnProperty(\"scripts\")) {assert(version.scripts && typeof version.scripts === \"object\", \"'scripts' field must be an object\");for (var s in version.scripts) {assert(typeof version.scripts[s] === \"string\", \"Non-string script field: \" + s);}}}}assert(Array.isArray(doc.maintainers), \"maintainers should be a list of owners\");doc.maintainers.forEach(function (m) {assert(m.name && m.email, \"Maintainer should have name and email: \" + JSON.stringify(m));});var time = doc.time;var c = new Date(Date.parse(time.created)), m = new Date(Date.parse(time.modified));assert(c.toString() !== \"Invalid Date\", \"invalid created time: \" + JSON.stringify(time.created));assert(m.toString() !== \"Invalid Date\", \"invalid modified time: \" + JSON.stringify(time.modified));if (oldDoc && oldDoc.time && oldDoc.time.created && Date.parse(oldDoc.time.created)) {assert(Date.parse(oldDoc.time.created) === Date.parse(time.created), \"created time cannot be changed\");}if (oldDoc && oldDoc.users) {assert(deepEquals(doc.users, oldDoc.users, [[user.name]]), \"you may only alter your own 'star' setting\");}if (doc.url) {assert(false, \"Package redirection has been removed. Please update your publish scripts.\");}if (doc.description) {assert(typeof doc.description === \"string\", \"\\\"description\\\" field must be a string\");}var oldVersions = oldDoc ? oldDoc.versions || {} : {};var oldTime = oldDoc ? oldDoc.time || {} : {};var versions = Object.keys(doc.versions), modified = null, allowedChange = [[\"directories\"], [\"deprecated\"]];for (var i = 0, l = versions.length; i < l; i++) {var v = versions[i];if (!v) {continue;}assert(doc.time[v], \"must have time entry for \" + v);if (doc.versions[v] && oldDoc.versions[v]) {doc.versions[v].version = oldDoc.versions[v].version;}if (doc.versions[v] && oldDoc.versions[v] && !deepEquals(doc.versions[v], oldVersions[v], allowedChange)) {var t = Date.parse(doc.time[v]), n = Date.now();if (typeof doc.versions[v]._npmUser !== \"object\") {continue;}assert(typeof doc.versions[v]._npmUser === \"object\", \"_npmUser field must be object\\n(You probably need to upgrade your npm version)\");var _npmUser = doc.versions[v]._npmUser;assert(_npmUser.name === user.name, \"version=\" + v + \"\\n\" + \"user.name=\" + user.name + \"\\n\" + \"_npmUser.name=\" + _npmUser.name + \"\\n\" + \"_npmUser.name must === user.name\");var found = false;for (var j = 0, lm = doc.maintainers.length; j < lm; j++) {var m = doc.maintainers[j];if (m.name === doc.versions[v]._npmUser.name) {found = true;break;}}assert(found, \"_npmUser must be a current maintainer.\\n\" + \"maintainers=\" + JSON.stringify(doc.maintainers) + \"\\n\" + \"current user=\" + JSON.stringify(doc.versions[v]._npmUser));} else if (oldTime[v]) {assert(oldTime[v] === doc.time[v], v + \" time should not be modified 1\");}}for (var v in oldTime) {if (doc.versions[v] || !oldVersions[v]) {continue;}assert(doc.time[v] === oldTime[v], v + \" time should not be modified 2\");}},[object Object],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1270\n(\"_design/scratch\",[object Array],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1517\n()@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1562\n@/home/ubuntu/hosting/installs/hosting_v1.5.0r2/share/couchdb/server/main.js:1573\n@:0\n">>}]}: net-alt
115 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:275:14)
115 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
115 error     at Request.EventEmitter.emit (events.js:98:17)
115 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
115 error     at Request.EventEmitter.emit (events.js:117:20)
115 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
115 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
115 error     at _stream_readable.js:920:16
115 error     at process._tickCallback (node.js:415:13)
116 error If you need help, you may report this *entire* log,
116 error including the npm and node versions, at:
116 error     <http://github.com/isaacs/npm/issues>
117 error System Darwin 13.0.0
118 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
119 error cwd /Users/liuyazhong/workspace/net-alt
120 error node -v v0.10.24
121 error npm -v 1.3.21
122 verbose exit [ 1, true ]
